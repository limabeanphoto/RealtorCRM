// Updated prisma/schema.prisma with daily contact goal field
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Contact {
  id              String    @id @default(cuid())
  name            String
  email           String?
  phone           String
  company         String?
  notes           String?
  createdAt       DateTime  @default(now())
  lastCallOutcome String?   // Track the outcome of the most recent call
  lastCallDate    DateTime? // Track when the last call was made
  calls           Call[]
  tasks           Task[]
  pendingCalls    PendingCall[]
  assignedTo      String?
  assignedToUser  User?     @relation("AssignedContacts", fields: [assignedTo], references: [id])
  status          String?   @default("Open")
  profileLink     String?
  volume          String?
  region          String?

  @@index([assignedTo])
  @@index([status])
  @@index([lastCallOutcome])
  @@index([createdAt])
  @@index([phone])
  @@index([email])
}

model Call {
  id              String    @id @default(cuid())
  contactId       String
  contact         Contact   @relation(fields: [contactId], references: [id])
  date            DateTime  @default(now())
  duration        Int       // Duration in minutes
  notes           String?
  outcome         String    // e.g., "Interested", "Not interested", "Follow up"
  isDeal          Boolean   @default(false) // Track deals
  createdAt       DateTime  @default(now())
  tasks           Task[]
  userId          String?
  user            User?     @relation(fields: [userId], references: [id])

  @@index([contactId])
  @@index([userId])
  @@index([isDeal])
  @@index([date])
  @@index([outcome])
  @@index([contactId, date])
}

model Task {
  id              String    @id @default(cuid())
  title           String
  description     String?
  status          String    @default("Open") // Open, In Progress, Completed
  priority        String    @default("Medium") // Low, Medium, High
  dueDate         DateTime
  completed       Boolean   @default(false)
  completedAt     DateTime?
  contactId       String?
  contact         Contact?  @relation(fields: [contactId], references: [id])
  callId          String?
  call            Call?     @relation(fields: [callId], references: [id])
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  userId          String?
  user            User?     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([status])
  @@index([priority])
  @@index([dueDate])
  @@index([contactId])
  @@index([completed])
  @@index([userId, status])
}

model PendingCall {
  id              String    @id @default(cuid())
  contactId       String
  contact         Contact   @relation(fields: [contactId], references: [id])
  userId          String
  user            User      @relation(fields: [userId], references: [id])
  phoneNumber     String    // Phone number for matching with webhook
  initiatedAt     DateTime  // When click-to-call was initiated
  scheduledFor    DateTime? // When the call is scheduled (optional)
  priority        String    @default("Medium") // Low, Medium, High
  notes           String?   // Notes about what to discuss
  status          String    @default("Pending") // Pending, initiated, completed, cancelled
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  completedAt     DateTime? // When the call was completed/cancelled
  openPhoneCallId String?   // OpenPhone call ID when matched
  notificationShown Boolean @default(false) // Whether popup was shown
  
  @@index([userId])
  @@index([contactId])
  @@index([status])
  @@index([phoneNumber])
  @@index([initiatedAt])
  @@index([scheduledFor])
  @@index([priority])
  @@index([userId, status])
  @@index([phoneNumber, initiatedAt])
  @@index([openPhoneCallId])
}

model User {
  id                   String    @id @default(cuid())
  email                String    @unique
  passwordHash         String
  firstName            String
  lastName             String
  cellPhone            String?
  assignedCallNumber   String?
  role                 String    @default("member")
  createdAt            DateTime  @default(now())
  lastLoginAt          DateTime?
  calls                Call[]
  tasks                Task[]
  contacts             Contact[] @relation("AssignedContacts")
  pendingCalls         PendingCall[]
  
  // Goal Fields - Updated with new daily contact goal
  dailyCallGoal        Int?      @default(30)
  dailyDealGoal        Int?      @default(5)
  dailyContactGoal     Int?      @default(10)    // New field for daily contact goal
  
  // OpenPhone Integration
  openPhoneApiKey      String?   // OpenPhone API key for VOIP integration
  
  // Scraping Integration
  scrapingSettings     String?   // JSON string for scraping provider settings
  scrapingUsage        String?   // JSON string for scraping usage tracking

  @@index([role])
  @@index([email])
}